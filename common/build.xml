<project name="common" default="all">

  <!--=======================================================================-->
  <property name="source.root" value="."/>
  <property name="source.etc" value="${source.root}/etc"/>
  <property name="source.jar" value="${source.root}/jar"/>
  <property name="source.java" value="${source.root}/java"/>
  <property name="source.res" value="${source.root}/resource"/>
  <property name="target.root" value="target/ant"/>
  <property name="target.output" value="${target.root}"/>
  <property name="target.classes" value="${target.root}/classes"/>

  <!--=======================================================================-->
  <patternset id="java.non.compile">
    <include name="**/*.properties"/>
    <include name="**/*.gif"/>
    <include name="**/*.jpg"/>
    <include name="**/*.png"/>
    <include name="**/*.ser"/>
  </patternset>
  <property name="java.non.compile" value="**/*.properties,**/*.gif,**/*.jpg,**/*.png,**/*.ser"/>

  <!--=======================================================================-->
  <target name="init" description="Prepare for other tasks">
    <tstamp/>
    <echo message="Building to: ${target.root}"/>
  </target>

  <!--=======================================================================-->
  <target name="compile" description="Validate source syntax">
    <mkdir dir="${target.classes}/resource"/>
    <antcall target="compile.section"><param name="section" value="core"/></antcall>
    <antcall target="compile.section"><param name="section" value="swing"/></antcall>
    <antcall target="compile.section"><param name="section" value="config"/></antcall>
    <antcall target="compile.section"><param name="section" value="test"/></antcall>
  </target>

  <!--=======================================================================-->
  <target name="compile.section">
    <echo message="Compiling ${source.java}/${section}"/>
    <mkdir dir="${target.classes}/${section}"/>
    <javac debug="on" includes="**/*.java" destdir="${target.classes}/${section}" source="1.4">
      <src path="${source.java}/${section}"/>
      <classpath>
        <dirset dir="${target.classes}"/>
        <fileset dir="${source.jar}" includes="**/*.jar"/>
      </classpath>
    </javac>
    <copy todir="${target.classes}/resource">
      <fileset dir="${source.java}/${section}">
        <patternset refid="java.non.compile"/>
      </fileset>
    </copy>
  </target>

  <!--=======================================================================-->
  <target name="jar" depends="compile, jar.check" unless="jar.uptodate" description="create the jar files">
    <jar jarfile="${target.output}/${ant.project.name}.jar">
      <fileset dir="${target.classes}/core"/>
      <fileset dir="${target.classes}/swing"/>
      <fileset dir="${target.classes}/config"/>
      <fileset dir="${source.res}"/>
    </jar>
  </target>
  <target name="jar.check" description="Check to see that the api jar file is up to date">
    <uptodate property="jar.uptodate" targetfile="${target.root}/jsword.jar">
      <srcfiles dir="${target.classes}/core"/>
      <srcfiles dir="${target.classes}/swing"/>
      <srcfiles dir="${target.classes}/config"/>
      <srcfiles dir="${source.res}"/>
    </uptodate>
  </target>

  <!--=======================================================================-->
  <target name="output" depends="jar" description="Get all of the outputs in sync">
    <copy todir="${target.output}" flatten="true">
      <fileset dir="${source.jar}">
        <include name="log4j-1.2.8/log4j-1.2.8.jar"/>
        <include name="jdom-1.0b10/jdom.jar"/>
        <include name="lang-2.0.0/commons-lang-2.0.jar"/>
      </fileset>
      <fileset dir="${source.etc}">
        <include name="config-test.xsl"/>
      </fileset>
    </copy>
  </target>

  <!--=======================================================================-->
  <target name="all" depends="clean, output" description="Run a full clean/build cycle">
  </target>

  <!--=======================================================================-->
  <target name="clean" depends="init" description="Remove the target directory">
    <delete dir="${target.root}"/>
  </target>

  <!--=======================================================================-->
  <target name="cvsup" description="cvs update">
    <cvs cvsRoot=":pserver:joe@cvs.crosswire.org:/cvs/jsword" dest=".">
      <commandline>
        <argument value="-q"/>
        <argument value="update"/>
        <argument value="-d"/>
        <argument value="-P"/>
      </commandline>
    </cvs>
    <chmod perm="755">
      <fileset dir="${source.etc}/build" includes="**/*.sh"/>
    </chmod>
  </target>

</project>
