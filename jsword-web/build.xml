<project name="jsword-web" default="all">

  <import file="../common/core.xml"/>
  <property name="dependency"         value="bibledesktop-web"/>
  <property name="dependency.jar"     value="../bibledesktop/target/ant/jar"/>

  <!--=======================================================================-->
  <property name="source.web"       value="${source.root}/web"/>

  <property name="webapp.jsword"    value="${target.root}/web"/> <!-- override -->
  <property name="jnlp.hostname"    value="localhost:8080"/> <!-- override -->
  <property name="ftp.base"         value="${basedir}/${target.root}/download"/> <!-- override -->
  <property name="ftp.prefix"       value="../download"/> <!-- override -->
  <property name="jnlp.installed"   value="../${dependency}/target/ant/web/nightly"/> <!-- override -->

  <property name="nightly.dir"      value="${ftp.base}/nightly"/>
  <property name="release.dir"      value="${ftp.base}/release"/>
  <property name="target.web"       value="${webapp.jsword}"/>

  <!--=======================================================================-->
  <path id="path.alljava">
    <pathelement path="../common/java/config"/>
    <pathelement path="../common/java/core"/>
    <pathelement path="../common/java/gpl"/>
    <pathelement path="../common/java/swing"/>
    <pathelement path="../jsword/java/jsword"/>
    <pathelement path="../bibledesktop/java/main"/>
    <pathelement path="../jsword-web/java/main"/>
  </path>
  <patternset id="pattern.alljava">
    <include name="common/java/config/**/*.java"/>
    <include name="common/java/core/**/*.java"/>
    <include name="common/java/gpl/**/*.java"/>
    <include name="common/java/swing/**/*.java"/>
    <include name="jsword/java/jsword/**/*.java"/>
    <include name="bibledesktop/java/main/**/*.java"/>
    <include name="jsword-web/java/main/**/*.java"/>
  </patternset>
  <fileset id="fileset.alljava" dir="..">
    <patternset refid="pattern.alljava"/>
  </fileset>
  <path id="path.allclasses">
    <pathelement path="../common/${target.classes}"/>
    <pathelement path="../jsword/${target.classes}"/>
    <pathelement path="../bibledesktop/${target.classes}"/>
    <pathelement path="../jsword-web/${target.classes}"/>
  </path>
  <patternset id="pattern.allclasses">
    <include name="common/${target.classes}/**/*.class"/>
    <include name="jsword/${target.classes}/**/*.class"/>
    <include name="bibledesktop/${target.classes}/**/*.class"/>
    <include name="jsword-web/${target.classes}/**/*.class"/>
  </patternset>
  <fileset id="fileset.allclasses" dir="..">
    <patternset refid="pattern.allclasses"/>
  </fileset>

  <property name="support.tools" value="../jsword-support/tools"/>
  <import file="${support.tools}/checkstyle-3.5/build.xml"/>
  <import file="${support.tools}/java2html131/build.xml"/>
  <import file="${support.tools}/javancss2141/build.xml"/>
  <import file="${support.tools}/jcoverage104/build.xml"/>
  <import file="${support.tools}/jdepend-2.9/build.xml"/>
  <import file="${support.tools}/findbugs-0.8.6/build.xml"/>
  <import file="${support.tools}/pmd-2.3/build.xml"/>
  <!-- ignored <import file="${support.tools}/tomcat/build.xml"/> -->

  <target name="javadoc" description="Create JavaDoc">
    <!-- This is not incremental. Empty it so it can remove unused docs. -->
    <delete dir="${target.web}/api"/>
    <mkdir dir="${target.web}/api"/>
    <javadoc
        sourcepathref="path.alljava"
        packagenames="org.crosswire.*,gnu.gpl.*"
        classpathref="runtime.jarpath"
        stylesheetfile="${source.etc}/javadoc/stylesheet.css"
        destdir="${target.web}/api"
        overview="../jsword/java/jsword/overview.html"
        private="true"
        author="true"
        use="true"
        splitindex="true"
        version="true"
        source="1.4"
        failonerror="false">
      <footer>Copyright &#168; 2003-2004</footer>
      <link offline="true" href="http://java.sun.com/j2se/1.4/docs/api/" packagelistLoc="${source.etc}/javadoc"/>
    </javadoc>
  </target>

  <!--=======================================================================-->
  <target name="tools" depends="java2html,checkstyle,javancss,findbugs,pmd,cpd,jdepend">
  </target>

  <!--=======================================================================-->
  <target name="install" depends="install.dependency, webapp, tools, release.nightly" description="Install all the files">
  </target>

  <!--=======================================================================-->
  <target name="webapp" description="Build an unpacked war file">
    <mkdir dir="${target.web}"/>
    <style basedir="${source.web}" extension=".html" style="${source.web}/template.xsl" destdir="${target.web}">
      <include name="**/*.html"/>
      <xmlcatalog>
        <dtd publicid="-//W3C//DTD XHTML 1.0 Transitional//EN" location="${source.etc}/xhtml1-transitional.dtd"/>
      </xmlcatalog>
    </style>
    <style basedir="${source.web}" extension=".jsp" style="${source.web}/template.xsl" destdir="${target.web}">
      <include name="*.jsp"/>
    </style>
    <mkdir dir="${target.web}/WEB-INF"/>
    <copy todir="${target.web}/WEB-INF" filtering="true">
      <filterset>
        <filter token="ftp.base" value="${ftp.base}"/>
        <filter token="ftp.prefix" value="${ftp.prefix}"/>
      </filterset>
      <fileset dir="${source.web}/WEB-INF"/>
    </copy>
    <copy todir="${target.web}">
      <fileset dir="${source.web}">
        <exclude name="*.jsp"/>
        <exclude name="*.html"/>
        <exclude name="*.xsl"/>
        <exclude name="WEB-INF/**"/>
      </fileset>
    </copy>
    <mkdir dir="${target.web}/WEB-INF/classes"/>
    <mkdir dir="${target.web}/WEB-INF/lib"/>
    <copy todir="${target.web}/WEB-INF/lib">
      <fileset dir="${target.jar}" includes="*.jar"/>
    </copy>
    <!-- needed by the download servlet -->
    <mkdir dir="${nightly.dir}"/>
    <mkdir dir="${release.dir}"/>
  </target>

  <!--=======================================================================-->
  <target name="release.nightly" description="Build a nightly release fileset">
    <tstamp>
      <format property="today" pattern="yyyyMMdd"/>
    </tstamp>
    <antcall target="release.version">
      <param name="version" value="${today}"/>
      <param name="directory" value="${nightly.dir}"/>
    </antcall>
  </target>

  <!--=======================================================================-->
  <target name="release.final">
    <antcall target="release.version">
      <param name="version" value="${product.version}"/>
      <param name="directory" value="${release.dir}"/>
    </antcall>
  </target>

  <!--=======================================================================-->
  <target name="release.version" depends="javadoc">
    <echo message="Building release ${version} to ${directory}"/>
    <!-- source packages -->
    <mkdir dir="${directory}"/>
    <zip zipfile="${directory}/jsword-${version}-src.zip">
      <zipfileset prefix="jsword" dir="../jsword" excludes="target/**"/>
      <zipfileset prefix="common" dir="../common" excludes="target/**"/>
      <zipfileset prefix="bibledesktop" dir="../bibledesktop" excludes="target/**"/>
    </zip>
    <tar tarfile="${directory}/jsword-${version}-src.tar.gz" compression="gzip">
      <tarfileset prefix="jsword" dir="../jsword" excludes="target/**"/>
      <tarfileset prefix="common" dir="../common" excludes="target/**"/>
      <tarfileset prefix="bibledesktop" dir="../bibledesktop" excludes="target/**"/>
    </tar>
    <!-- binary packages -->
    <zip zipfile="${directory}/jsword-${version}-bin.zip">
      <zipfileset prefix="jsword-${version}" dir="${jnlp.installed}"/>
    </zip>
    <tar tarfile="${directory}/jsword-${version}-bin.tar.gz" compression="gzip">
      <tarfileset prefix="jsword-${version}" dir="${jnlp.installed}"/>
    </tar>
    <!-- documentation packages -->
    <zip zipfile="${directory}/jsword-${version}-doc.zip">
      <zipfileset prefix="jsword-${version}" dir="${target.web}/api"/>
    </zip>
    <tar tarfile="${directory}/jsword-${version}-doc.tar.gz" compression="gzip">
      <tarfileset prefix="jsword-${version}" dir="${target.web}/api"/>
    </tar>
  </target>

  <!--=======================================================================
  <target name="test.suite" depends="alltests" description="Run a full test suite">
  </target>
-->
</project>
