<project name="jsword-web" default="all">

  <!-- This build uses the core build targets -->
  <import file="../common/core.xml"/>
  <property name="dependency"       value="bibledesktop"/>
  <property name="dependency.jar"   value="../${dependency}/target/ant/jar"/>
  
  <import file="../jsword-support/build.xml"/>

  <!--=======================================================================-->
  <property name="source.web"       value="${source.root}/web"/>
  <property name="target.download"  value="${target.root}/download"/> <!-- designed for override -->
  <property name="target.web"       value="${target.root}/web"/> <!-- designed for override -->

  <!-- things from other projects that will be needed here -->
  <property name="gener.root" value="target/gener"/>
  <property name="target.swingui" value="${target.root}/swingui/jsword"/>
  
  <property name="ant.lib" value="${ant.home}/lib"/>
  <!-- override this with -Djnlp.hostname=www.crosswire.org to build in live -->
  <property name="jnlp.hostname" value="localhost:8080"/>
  <!-- override this to build in live. This probably won't work without overriding -->
  <property name="webprefix" value="../download"/>
  <property name="localprefix" value="${basedir}/${target.download}"/>
  <property name="nightly.dir" value="${localprefix}/nightly"/>
  <property name="release.dir" value="${localprefix}/release"/>

  <!--=======================================================================-->
  <target name="files" description="Copy the file based documentation">
    <mkdir dir="${target.web}"/>
    <style basedir="${source.web}" extension=".html" style="${source.web}/template.xsl" destdir="${target.web}">
      <include name="**/*.html"/>
      <xmlcatalog>
        <dtd publicid="-//W3C//DTD XHTML 1.0 Transitional//EN" location="${source.etc}/xhtml1-transitional.dtd"/>
      </xmlcatalog>
    </style>
    <style basedir="${source.web}" extension=".jsp" style="${source.web}/template.xsl" destdir="${target.web}">
      <include name="*.jsp"/>
    </style>
    <copy todir="${target.web}">
      <fileset dir="${source.web}">
        <exclude name="*.jsp"/>
        <exclude name="*.html"/>
        <exclude name="*.xsl"/>
      </fileset>
    </copy>
    <mkdir dir="${target.web}/WEB-INF"/>
    <copy todir="${target.web}/WEB-INF" filtering="true">
      <filterset>
        <filter token="localprefix" value="${localprefix}"/>
        <filter token="webprefix" value="${webprefix}"/>
      </filterset>
      <fileset dir="${source.etc}/web"/>
    </copy>
    <mkdir dir="${target.web}/WEB-INF/classes"/>
    <copy todir="${target.web}/WEB-INF/classes">
      <fileset dir="${target.classes}/resource"/>
      <fileset dir="${source.res}"/>
    </copy>
    <mkdir dir="${target.web}/WEB-INF/lib"/>
    <copy todir="${target.web}/WEB-INF/lib">
      <fileset dir="${target.web}/jnlp" includes="**/*.jar"/>
      <fileset dir="${target.jar}" includes="jsword-servlet.jar"/>
    </copy>
    <!-- needed by the download servlet -->
    <mkdir dir="${nightly.dir}"/>
    <mkdir dir="${release.dir}"/>
  </target>

  <!--=======================================================================-->
  <target name="web" depends="files, tools" description="All the documentation tasks">
  </target>

  <!--=======================================================================-->
  <target name="release.nightly" description="Build a nightly release fileset">
    <tstamp>
      <format property="today" pattern="yyyyMMdd"/>
    </tstamp>
    <antcall target="release.version">
      <param name="version" value="${today}"/>
      <param name="directory" value="${nightly.dir}"/>
    </antcall>
  </target>

  <!--=======================================================================-->
  <target name="release.final">
    <antcall target="release.version">
      <param name="version" value="${product.version}"/>
      <param name="directory" value="${release.dir}"/>
    </antcall>
  </target>

  <!--=======================================================================-->
  <target name="release.version" depends="web">
    <echo message="Building release ${version} to ${directory}"/>
    <!-- source packages -->
    <mkdir dir="${directory}"/>
    <zip zipfile="${directory}/${ant.project.name}-${version}-src.zip">
      <zipfileset prefix="${ant.project.name}-${version}" dir="${source.root}">
        <exclude name="target/**"/>
        <exclude name="notes/**"/>
      </zipfileset>
    </zip>
    <tar tarfile="${directory}/${ant.project.name}-${version}-src.tar.gz" compression="gzip">
      <tarfileset prefix="${ant.project.name}-${version}" dir="${source.root}">
        <exclude name="target/**"/>
        <exclude name="notes/**"/>
      </tarfileset>
    </tar>
    <!-- binary packages -->
    <zip zipfile="${directory}/${ant.project.name}-${version}-bin.zip">
      <zipfileset prefix="${ant.project.name}-${version}" dir="${target.swingui}"/>
    </zip>
    <tar tarfile="${directory}/${ant.project.name}-${version}-bin.tar.gz" compression="gzip">
      <tarfileset prefix="${ant.project.name}-${version}" dir="${target.swingui}"/>
    </tar>
    <!-- documentation packages -->
    <zip zipfile="${directory}/${ant.project.name}-${version}-doc.zip">
      <zipfileset prefix="${ant.project.name}-${version}" dir="${target.web}/api"/>
    </zip>
    <tar tarfile="${directory}/${ant.project.name}-${version}-doc.tar.gz" compression="gzip">
      <tarfileset prefix="${ant.project.name}-${version}" dir="${target.web}/api"/>
    </tar>
  </target>

  <!--=======================================================================-->
  <target name="nightly" depends="web, release.nightly" description="To be run nightly at crosswire">
    <!-- also used to depend on veryclean -->
  </target>

  <!--=======================================================================-->
  <target name="cvsup.extra" description="Extra stuff to do after calling cvsup">
    <chmod perm="755">
      <fileset dir="${source.etc}/build" includes="**/*.sh"/>
    </chmod>
  </target>

</project>
